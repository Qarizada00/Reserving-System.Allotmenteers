//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace alloment_system.DBModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UserDBEntities6 : DbContext
    {
        public UserDBEntities6()
            : base("name=UserDBEntities6")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Branches> Branches { get; set; }
        public virtual DbSet<SHinfo> SHinfo { get; set; }
        public virtual DbSet<AppS_info> AppS_info { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<internship> internship { get; set; }
        public virtual DbSet<JobApps_> JobApps_ { get; set; }
        public virtual DbSet<SharedHolders> SharedHolders { get; set; }
        public virtual DbSet<Feedbacks> Feedbacks { get; set; }
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Reservation> Reservation { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Notify> Notify { get; set; }
        public virtual DbSet<Categories1> Categories1 { get; set; }
        public virtual DbSet<EmployeeView> EmployeeView { get; set; }
        public virtual DbSet<JobApplicants> JobApplicants { get; set; }
        public virtual DbSet<SharedHolders1> SharedHolders1 { get; set; }
        public virtual DbSet<Internships> Internships { get; set; }
    
        public virtual int Deletes(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deletes", idParameter);
        }
    
        public virtual int DeletesUser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletesUser", idParameter);
        }
    
        public virtual ObjectResult<Get_Id_Result> Get_Id(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Id_Result>("Get_Id", emailParameter);
        }
    
        public virtual int InsertDepartment(string department, Nullable<int> officeNumber)
        {
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var officeNumberParameter = officeNumber.HasValue ?
                new ObjectParameter("OfficeNumber", officeNumber) :
                new ObjectParameter("OfficeNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDepartment", departmentParameter, officeNumberParameter);
        }
    
        public virtual int InsertEmployee(string empName, string designation, string department)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmployee", empNameParameter, designationParameter, departmentParameter);
        }
    
        public virtual int InsertIn(string interName, Nullable<int> internAge, Nullable<System.DateTime> intershipEndingDate, string department)
        {
            var interNameParameter = interName != null ?
                new ObjectParameter("InterName", interName) :
                new ObjectParameter("InterName", typeof(string));
    
            var internAgeParameter = internAge.HasValue ?
                new ObjectParameter("InternAge", internAge) :
                new ObjectParameter("InternAge", typeof(int));
    
            var intershipEndingDateParameter = intershipEndingDate.HasValue ?
                new ObjectParameter("IntershipEndingDate", intershipEndingDate) :
                new ObjectParameter("IntershipEndingDate", typeof(System.DateTime));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertIn", interNameParameter, internAgeParameter, intershipEndingDateParameter, departmentParameter);
        }
    
        public virtual int InsertUser(string firstName, string lastName, string emaial, string pass, Nullable<System.DateTime> createdOn)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emaialParameter = emaial != null ?
                new ObjectParameter("Emaial", emaial) :
                new ObjectParameter("Emaial", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUser", firstNameParameter, lastNameParameter, emaialParameter, passParameter, createdOnParameter);
        }
    
        public virtual int Pcreate(string name, string namefood, string restaurantname, string pricefood, string address)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var namefoodParameter = namefood != null ?
                new ObjectParameter("namefood", namefood) :
                new ObjectParameter("namefood", typeof(string));
    
            var restaurantnameParameter = restaurantname != null ?
                new ObjectParameter("restaurantname", restaurantname) :
                new ObjectParameter("restaurantname", typeof(string));
    
            var pricefoodParameter = pricefood != null ?
                new ObjectParameter("pricefood", pricefood) :
                new ObjectParameter("pricefood", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pcreate", nameParameter, namefoodParameter, restaurantnameParameter, pricefoodParameter, addressParameter);
        }
    
        public virtual ObjectResult<SelectAllBranches_Result> SelectAllBranches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllBranches_Result>("SelectAllBranches");
        }
    
        public virtual ObjectResult<SelectAllEmployees_Result> SelectAllEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllEmployees_Result>("SelectAllEmployees");
        }
    
        public virtual ObjectResult<SelectAllFeedbacks_Result> SelectAllFeedbacks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllFeedbacks_Result>("SelectAllFeedbacks");
        }
    
        public virtual ObjectResult<SelectAllInterns_Result> SelectAllInterns()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllInterns_Result>("SelectAllInterns");
        }
    
        public virtual ObjectResult<SelectAllProducts_Result> SelectAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllProducts_Result>("SelectAllProducts");
        }
    
        public virtual ObjectResult<SelectAllUsers_Result> SelectAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllUsers_Result>("SelectAllUsers");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int insertProducts(string image, string name, string price)
        {
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertProducts", imageParameter, nameParameter, priceParameter);
        }
    }
}
